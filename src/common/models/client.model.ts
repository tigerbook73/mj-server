import { UserModel } from "./user.model";

export interface ClientCreateDto {
  id: string;
  socketId: string;
  socket: any;
}

/**
 * Represents a user in the system.
 */
export class ClientModel {
  constructor(
    public id: string, // unique id generated by server
    public socketId: string, // web socket ID
    public user: UserModel | null = null, // user information if login
    public socket: any = null, // web socket object (only used on server side)
  ) {}

  static create(clientCreate: ClientCreateDto): ClientModel {
    const client = new ClientModel(
      clientCreate.id,
      clientCreate.socketId,
      null,
      clientCreate.socket,
    );
    return client;
  }

  // only for client side
  static fromJSON(data: any): ClientModel {
    const client = new ClientModel(
      data.id,
      data.socket,
      data.user ? UserModel.fromJSON(data.user) : null,
      null,
    );
    return client;
  }

  toJSON() {
    return {
      id: this.id,
      user: this.user,
      socketId: this.socketId || undefined,
    };
  }
}
